package RT;

=head1 NAME

RT::Config

=for testing

use RT::Config;

=cut

# {{{ Base Configuration

# $rtname is the string that RT will look for in mail messages to
# figure out what ticket a new piece of mail belongs to

# Your domain name is recommended, so as not to pollute the namespace.
# once you start using a given tag, you should probably never change it.
# (otherwise, mail for existing tickets won't get put in the right place

Set($rtname , "INSPIRE-HEP");


# This regexp controls what subject tags RT recognizes as its own.
# If you're not dealing with historical $rtname values, you'll likely
# never have to enable this feature.
#
# Be VERY CAREFUL with it. Note that it overrides $rtname for subject
# token matching and that you should use only "non-capturing" parenthesis
# grouping. For example:
#
# 	Set($EmailSubjectTagRegex, qr/(?:example.com|example.org)/i );
#
# and NOT
# 
# 	Set($EmailSubjectTagRegex, qr/(example.com|example.org)/i );
#
# This setting would make RT behave exactly as it does without the 
# setting enabled.
#
Set($EmailSubjectTagRegex, qr/(?:INSPIRE-HEP|SLAC-TIS)/i );



# You should set this to your organization's DNS domain. For example,
# fsck.com or asylum.arkham.ma.us. It's used by the linking interface to
# guarantee that ticket URIs are unique and easy to construct.

Set($Organization , "inspire-hep.net");


# $Timezone is used to convert times entered by users into GMT and back again
# It should be set to a timezone recognized by your local unix box.
Set($Timezone , 'US/Pacific');

# }}}


# By default, RT shows newest transactions at the bottom of the ticket
# history page, if you want see them at the top set this to '0'.

Set($OldestTransactionsFirst, '0');


# {{{ Database Configuration

# Database driver beeing used. Case matters
# Valid types are "mysql", "Oracle" and "Pg"

Set($DatabaseType , 'mysql');

# The domain name of your database server
# If you're running mysql and it's on localhost,
# leave it blank for enhanced performance

Set($DatabaseHost   , 'localhost');
Set($DatabaseRTHost , 'localhost');


# The port that your database server is running on.  Ignored unless it's
# a positive integer. It's usually safe to leave this blank
Set($DatabasePort , '');

#The name of the database user (inside the database)
#Set($DatabaseUser , 'tis_rt_user');
Set($DatabaseUser , 'rt_user');

# Password the DatabaseUser should use to access the database
Set($DatabasePassword , '1nsp2r3');

# The name of the RT's database on your database server
Set($DatabaseName , 'tis_rt3');


# }}}

# {{{ Incoming mail gateway configuration

# OwnerEmail is the address of a human who manages RT. RT will send
# errors generated by the mail gateway to this address.  This address
# should _not_ be an address that's managed by your RT instance.

Set($OwnerEmail , 'travis@slac.stanford.edu');


# RTAddressRegexp is used to make sure RT doesn't add itself as a ticket CC if
# the setting above is enabled.

Set($RTAddressRegexp , '^help\@inspire[\-\.]hep\.(net|org)$');



# {{{ Outgoing mail configuration

# RT is designed such that any mail which already has a ticket-id associated
# with it will get to the right place automatically.

# $CorrespondAddress and $CommentAddress are the default addresses
# that will be listed in From: and Reply-To: headers of correspondence
# and comment mail tracked by RT, unless overridden by a queue-specific
# address.


Set($CorrespondAddress , 'help@inspire-hep.net');
Set($CommentAddress , 'rt-comment@inspire-hep.net');



# If we're running as a superuser, run on port 80
# Otherwise, pick a high port for this user.

Set($WebPort , 80);# + ($< * 7274) % 32766 + ($< && 1024));

# This is the Scheme, server and port for constructing urls to webrt
# $WebBaseURL doesn't need a trailing /

Set($WebBaseURL , "https://inspirert.cern.ch");

Set($WebURL , $WebBaseURL . $WebPath . "/");

Set($WebImagesURL , $WebPath . "/NoAuth/images/");


# $LogoURL points to the URL of the RT logo displayed in the web UI

Set($LogoImageURL , $WebImagesURL . "inspire_logo_final.gif");
Set($LogoLinkURL, "http://inspire-hep.net");
Set($LogoAltText, "INSPIRE RT");

# WebNoAuthRegex - What portion of RT's URLspace should not require
# authentication.
Set($WebNoAuthRegex, qr!^(?:/+NoAuth/|
                            /+REST/\d+\.\d+/NoAuth/)!x );

# If $WebExternalAuth is defined, RT will defer to the environment's
# REMOTE_USER variable.

Set($WebExternalAuth , undef);

# If $WebFallbackToInternalAuth is undefined, the user is allowed a chance
# of fallback to the login screen, even if REMOTE_USER failed.

Set($WebFallbackToInternalAuth , 1);


# $WebExternalAuto will create users under the same name as REMOTE_USER
# upon login, if it's missing in the Users table.

Set($WebExternalAuto , 1);


# {{{ RT Date Handling Options (for Time::ParseDate)

# Set this to 1 if your local date convention looks like "dd/mm/yy"
# instead of "mm/dd/yy".

Set($DateDayBeforeMonth , 0);

# Should "Tuesday" default to meaning "Next Tuesday" or "Last Tuesday"?
# Set to 0 for "Next" or 1 for "Last".

Set($AmbiguousDayInPast , 1);

# }}}


#
# Ability to use transaction batch  tcb 6/2008?
#
Set($UseTransactionBatch, 1);

# }}}


# {{{ Development Mode
#
# RT comes with a "Development mode" setting. 
# This setting, as a convenience for developers, turns on 
# all sorts of development options that you most likely don't want in 
# production:
#
# * Turns off Mason's 'static_source' directive. By default, you can't 
#   edit RT's web ui components on the fly and have RT magically pick up
#   your changes. (It's a big performance hit)
#
#  * More to come
#

Set($DevelMode, '0');

# }}}


1;
